{
    "openapi": "3.0.0",
    "info": {
        "title": "Integration Swagger in Laravel with Sanctum Auth Documentation",
        "description": "Implementation of Swagger with in Laravel",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "API Server Mobile Shop"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "login",
                "requestBody": {
                    "description": "Register Form",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "browser"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout Current User",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/forgot": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Enter email to reset password",
                "description": "Enter the registration email, then receive link reset password from email",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Reset Pasword",
                "description": "Enter token from link had been sent to your email to reset password",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/change": {
            "patch": {
                "tags": [
                    "Account"
                ],
                "summary": "Change Pasword",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456789"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register New Account",
                "operationId": "register",
                "requestBody": {
                    "description": "Register Form",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "name",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Nguyen Van A"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get Current User Information",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/update": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Update Current User Information",
                "operationId": "updateUser",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "sex": {
                                        "description": "0: Male, 1: Female, 2: Orther",
                                        "type": "integer",
                                        "default": "0",
                                        "maximum": "2",
                                        "minimum": "0",
                                        "enum": [
                                            0,
                                            1,
                                            2
                                        ]
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "file"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/destroy/{id}": {
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Delete User Account By ID",
                "description": "Permission: Admin",
                "operationId": "destroyUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/verify/{id}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Verify Email After Register",
                "description": "Verify account by link had been received from email",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id account",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "expires time of link",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "token hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "signature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/resend": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Resend Email To Verify",
                "operationId": "resendEmail",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get All Brand",
                "operationId": "getBrands",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-sort_no, 3-home, 4-image, 5-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Add Brand With Form Data",
                "operationId": "storeBrand",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "home",
                                    "sort_no",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": "0"
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Find Brand By ID",
                "operationId": "showBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update Brand With Form Data",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "home",
                                    "sort_no",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": "0"
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete Brand By ID",
                "operationId": "destroyBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/brands/excel/export": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Export Excel Brand",
                "operationId": "exportBrand",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-sort_no, 3-home, 4-image, 5-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get All Category",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-sort_no, 3-home, 4-image, 5-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Add Category With Form Data",
                "operationId": "storeCategory",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "home",
                                    "sort_no",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": "0"
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Find Category By ID",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category With Form Data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "home",
                                    "sort_no",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": "0"
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category By ID",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/categories/excel/export": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Export Excel Category",
                "operationId": "exportCategory",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-sort_no, 3-home, 4-image, 5-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/colors": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Get All Color",
                "operationId": "getColors",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-code, 3-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Color"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Color"
                ],
                "summary": "Add Color With Form Data",
                "operationId": "storeColor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Đỏ"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "#ff0000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Color"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/colors/{id}": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Find Color By ID",
                "operationId": "showColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Color"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Color"
                ],
                "summary": "Update Color With Form Data",
                "operationId": "updateColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Đỏ"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "#ff0000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Color"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Color"
                ],
                "summary": "Delete Color By ID",
                "operationId": "destroyColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/colors/excel/export": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Export Excel Color",
                "operationId": "exportColor",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-code, 3-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get All Product",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-price_core, 3-price, 4-sort_no, 5-home, 6-new, 7-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Add Product With Form Data",
                "operationId": "storeProduct",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id",
                                    "brand_id",
                                    "price_core",
                                    "price",
                                    "sort_no",
                                    "home",
                                    "new",
                                    "images",
                                    "introduction",
                                    "additional_incentives",
                                    "description",
                                    "specification"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "price_core": {
                                        "type": "number",
                                        "multipleOf": 1000
                                    },
                                    "price": {
                                        "type": "number",
                                        "multipleOf": 1000
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": 0
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "new": {
                                        "description": "New product => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "introduction": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "additional_incentives": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "description": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "specification": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "images[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Find Product By ID",
                "operationId": "showProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Update Product With Form Data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id",
                                    "brand_id",
                                    "price_core",
                                    "price",
                                    "sort_no",
                                    "home",
                                    "new",
                                    "introduction",
                                    "additional_incentives",
                                    "description",
                                    "specification",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "price_core": {
                                        "type": "number",
                                        "multipleOf": 1000
                                    },
                                    "price": {
                                        "type": "number",
                                        "multipleOf": 1000
                                    },
                                    "sort_no": {
                                        "type": "integer",
                                        "default": 0
                                    },
                                    "home": {
                                        "description": "Show in homepage => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "new": {
                                        "description": "New product => 0: False, 1: True",
                                        "type": "string",
                                        "default": "0",
                                        "enum": [
                                            "0",
                                            "1"
                                        ]
                                    },
                                    "introduction": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "additional_incentives": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "description": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "specification": {
                                        "type": "string",
                                        "default": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT"
                                    },
                                    "delete_images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete Product By ID",
                "operationId": "destroyProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/excel/export": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Export Excel Product",
                "operationId": "exportProduct",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-price_core, 3-price, 4-sort_no, 5-home, 6-new, 7-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rams": {
            "get": {
                "tags": [
                    "Ram"
                ],
                "summary": "Get All Ram",
                "operationId": "getRams",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Ram"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ram"
                ],
                "summary": "Add Ram",
                "operationId": "storeRam",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "integer",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Ram"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rams/{id}": {
            "get": {
                "tags": [
                    "Ram"
                ],
                "summary": "Find Ram By ID",
                "operationId": "showRam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Ram"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ram"
                ],
                "summary": "Update Ram",
                "operationId": "updateRam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "integer",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Ram"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ram"
                ],
                "summary": "Delete Ram By ID",
                "operationId": "destroyRam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rams/excel/export": {
            "get": {
                "tags": [
                    "Ram"
                ],
                "summary": "Export Excel Ram",
                "operationId": "exportRam",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/roms": {
            "get": {
                "tags": [
                    "Rom"
                ],
                "summary": "Get All Rom",
                "operationId": "getRoms",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rom"
                ],
                "summary": "Add Rom",
                "operationId": "storeRom",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "integer",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/roms/{id}": {
            "get": {
                "tags": [
                    "Rom"
                ],
                "summary": "Find Rom By ID",
                "operationId": "showRom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rom"
                ],
                "summary": "Update Rom",
                "operationId": "updateRom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "_method"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "integer",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Method not allow"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Rom"
                ],
                "summary": "Delete Rom By ID",
                "operationId": "destroyRom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/roms/excel/export": {
            "get": {
                "tags": [
                    "Rom"
                ],
                "summary": "Export Excel Rom",
                "operationId": "exportRom",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by column: 0-id, 1-name, 2-created_at",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort by order: 0-ASC, 1-DESC",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "sort by paginate page: 0-10, 1-25, 2-50, 3-100",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": "0",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date to filter (dd/mm/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "iPhone"
                    },
                    "sort_no": {
                        "type": "integer",
                        "example": "1"
                    },
                    "home": {
                        "description": "Show in homepage => 0: False, 1: True",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": "0"
                    },
                    "image": {
                        "type": "string",
                        "example": "iphone.png"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "Category": {
                "title": "Category",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Điện thoại"
                    },
                    "sort_no": {
                        "type": "integer",
                        "example": "1"
                    },
                    "home": {
                        "description": "Show in homepage => 0: False, 1: True",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": "0"
                    },
                    "image": {
                        "type": "string",
                        "example": "dien-thoai.png"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Color": {
                "title": "Color",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Đỏ"
                    },
                    "code": {
                        "type": "string",
                        "example": "#ff0000"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Color"
                }
            },
            "Product": {
                "title": "Product",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "iPhone 12 Pro Max 64GB"
                    },
                    "category_id": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "brand_id": {
                        "$ref": "#/components/schemas/Brand"
                    },
                    "price_core": {
                        "type": "number",
                        "multipleOf": 1000,
                        "example": 300000
                    },
                    "price": {
                        "type": "number",
                        "multipleOf": 1000,
                        "example": 250000
                    },
                    "sort_no": {
                        "type": "integer",
                        "example": "1"
                    },
                    "home": {
                        "description": "Show in homepage => 0: False, 1: True",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": "0"
                    },
                    "new": {
                        "description": "New product => 0: False, 1: True",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": "0"
                    },
                    "introduction": {
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                    },
                    "additional_incentives": {
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                    },
                    "description": {
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                    },
                    "specification": {
                        "type": "string",
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "Ram": {
                "title": "Ram",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "integer",
                        "example": "4 (4GB)"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ram"
                }
            },
            "Rom": {
                "title": "Rom",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "integer",
                        "example": "64 (64GB)"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Rom"
                }
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 10
                    },
                    "sex": {
                        "description": "Sex: 0: Male, 1: Female, 2: Orther",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    },
                    "birthday": {
                        "description": "Birthday: dd/mm/yyyy",
                        "type": "string",
                        "format": "date-time"
                    },
                    "address": {
                        "type": "string"
                    },
                    "role": {
                        "description": "Role: 0: User, 1: Admin, 2: Staff",
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Brand"
        },
        {
            "name": "Category"
        },
        {
            "name": "Color"
        },
        {
            "name": "Product"
        },
        {
            "name": "Ram"
        },
        {
            "name": "Rom"
        },
        {
            "name": "Authentication",
            "description": "Sanctum ToKen Authen"
        },
        {
            "name": "Account"
        }
    ],
    "security": [
        []
    ]
}